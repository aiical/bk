http://www.cnblogs.com/sheng-jie/p/6508241.html

使用IEntityCache对实体进行缓存
3.4.1. 缓存方式的思考

上面的两种缓存方式，我们一般用于存储自定义缓存，但有一个局限性，受到具体缓存过期时间的限制。
思考一下，我们缓存的用户列表，它是一个实时会变化的集合，而这个实时是不定时的，可能1mins之内就有新用户注册，也有可能几天没有用户注册（比如我们这个Demo），这个时候就不好设置缓存过期（刷新）时间。
但由于我们是Demo性质只是为了演示用法，所以我们设定缓存过期时间为10mins也无可厚非。

那有没有一种缓存机制，不需要设置缓存过期时间，当数据变化的时候就能自动重新缓存呢？
答案是肯定的，Abp为我们提供了IEntityCache，实体缓存机制。
当我们需要通过ID获取实体数据而又不想经常去数据库查询时，我们就可以使用IEntityCache。

IEntityCache支持按实体Id进行动态缓存。

 IEntityCache缓存原理

首先它第一次从数据库中获取实体，然后后续调用将会从缓存获取。
当实体更新或删除时它自动将缓存的实体置为无效状态，因此它将会再下一次请求中从数据库中重新获取。
它使用缓存的类的完整类名作为缓存名称，可以通过为构造函数传参来修改缓存名称。
它是线程安全的。
它使用IObjectMapper将实体映射到缓存项。 IObjectMapper由AutoMapper模块实现。所以，如果你使用它，你需要AutoMapper模块。您可以覆盖MapToCacheItem方法以手动将实体映射到缓存项。